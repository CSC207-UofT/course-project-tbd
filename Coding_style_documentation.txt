Coding style and documentation

To make sure we strictly follow the coding style and documentation guidelines of java, we consulted existing
documentations and coding style within the java library. For example, while we were documenting our code,
we opened ArrayList class in java and mimic the documentations they have used in their code. We also consulted
the tutrialspoint.com website (https://www.tutorialspoint.com/java/java_documentation.htm) for many other Javadoc
tags that we don’t know what they mean., such as @inheritDoc, @see, etc.. One thing worth noting is that for our
data gateway files, we are using a hash map directly to store the inputs because we know that the way we design them,
it is appropriate to use a hash map in this case.

As for the coding style, since each of us have different writing habits when it comes to code formats, such as
using spaces instead of tabs, adding spaces between operators, and the placement of brackets. We utilized the
IntelliJ re-fractor feature: reformat code (Ctrl + Alt + L). We do this every time before we commit and push onto
GitHub to make sure people who are reviewing the code don’t have a hard time reading the code. We also cleared all
the warnings, which made our code cleaner. So overall, in terms of coding style and documentation, our code looks
standardized and uniform across all files, regardless of who wrote them.
