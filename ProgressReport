Contribution list:
Qiyi Zhang(AKA Leo):
co-writer of Scenario-WalkThrough, ProgressReport and specification
Coding: Main, MainPageController, MainPagePresenter, UserLoginController, UserLoginPresenter, LeavePageController,
LeavePagePresenter, NewUserController, NewUserPresenter

Kevin: co-writer of CRC model, edited Scenario-walkthrough and specification.
       Coding: Created GroupTest, Category, Features, JoinGroupController, JoinGroupPresenter, TaskPageController,
       TaskPagePresenter
       Helped edit Group, GroupManager, TaskPageController

Peter:

Owen: Helped edit CRC model.
Coding: Created and wrote UserPageController, UsePagePresenter, TaskPageController, TaskPagePresenter
        also implemented related functionalities in Class Task and NormalUser such as the toString and display methods.


Sana: Helped edit CRC model.
Coding: Created IndividualTaskManager, Task, CategoryTest.
Started on the other Phase_0 Tests files (GroupManagerTest, UserManagerTest).

Fariha: Coding: Helped edit IndividualTaskManager, Task, NormalUserTest.
Started on the other Phase_0 Tests files.

Aryan: co writer of CRC model, editor of specification.
       Coding: Worked on NormalUserTest, Group, GroupManager, NormalUser,
       Helped edit JoinGroupController, LeaveGroupController, TaskPageController, TaskPagePresenter

Harry: co-writer and edit the CRC model.
       Coding: Created and modify GroupManager, implemented GroupManagerTest
       Help edit with LeaveGroupController, TaskPageController, Group, NormalUser, User

Phase 0 summary:
user can create and login an account
the user can create/join/leave group
and add/finish task


Extension of the group in the phase 1:
    Group: will be joined with more features.
        1. the leader of group can assign tasks individually to other members.
        2. Discussion board, where each members of the group can post stuff
        3. private message: each member can leave a message to others in this group to Notification Box (will show up in
        phase 1.
        4. Group can store some data in different "Category", which is like a folder with different names
        5. Leader may receive a notification whenever an user applied the group. And he can choose to accept this new
        member or reject him.

    Task:
        1. User can add due date of the task, and will receive a notification when the task is about to due. After due
        date, nthe task will be automatically assigned "finished" in status.
        2. will add some special task templates: like StudyTask, WorkoutTask, CountDownTask. And those special task will
        have extended functionality differed from normal task
        - CountDownTask will implement a tomatoClock template to count down the time when the user choose this task


    Notification Box:
        1. will receive a message when a task, which has due date, is about to due
        2. will receive the private message from the group member
        3. will be able to make decision like accept or reject the request from a user who wants to join the group


    GUI

    If still have time:
         Social System: users can add other users as friends and have a special chat box with each of them
         AdminUser: would be a build-in account that can do what normal user do, and can also manager users' account



